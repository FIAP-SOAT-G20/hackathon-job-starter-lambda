// Code generated by MockGen. DO NOT EDIT.
// Source: k8_api_interface.go

// Package mock_api is a generated GoMock package.
package mock_api

import (
	context "context"
	reflect "reflect"

	"github.com/FIAP-SOAT-G20/hackathon-job-starter-lambda/internal/infrastructure/api"
	gomock "go.uber.org/mock/gomock"
)

// MockK8sAPIInterface is a mock of K8sAPIInterface interface.
type MockK8sAPIInterface struct {
	ctrl     *gomock.Controller
	recorder *MockK8sAPIInterfaceMockRecorder
	isgomock struct{}
}

// MockK8sAPIInterfaceMockRecorder is the mock recorder for MockK8sAPIInterface.
type MockK8sAPIInterfaceMockRecorder struct {
	mock *MockK8sAPIInterface
}

// NewMockK8sAPIInterface creates a new mock instance.
func NewMockK8sAPIInterface(ctrl *gomock.Controller) *MockK8sAPIInterface {
	mock := &MockK8sAPIInterface{ctrl: ctrl}
	mock.recorder = &MockK8sAPIInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sAPIInterface) EXPECT() *MockK8sAPIInterfaceMockRecorder {
	return m.recorder
}

// CreateJob mocks base method.
func (m *MockK8sAPIInterface) CreateJob(ctx context.Context, jobInput *api.JobInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJob", ctx, jobInput)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateJob indicates an expected call of CreateJob.
func (mr *MockK8sAPIInterfaceMockRecorder) CreateJob(ctx, jobInput any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJob", reflect.TypeOf((*MockK8sAPIInterface)(nil).CreateJob), ctx, jobInput)
}

// GetLastJobStatus mocks base method.
func (m *MockK8sAPIInterface) GetLastJobStatus(ctx context.Context, jobName, namespace string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastJobStatus", ctx, jobName, namespace)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastJobStatus indicates an expected call of GetLastJobStatus.
func (mr *MockK8sAPIInterfaceMockRecorder) GetLastJobStatus(ctx, jobName, namespace any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastJobStatus", reflect.TypeOf((*MockK8sAPIInterface)(nil).GetLastJobStatus), ctx, jobName, namespace)
}
