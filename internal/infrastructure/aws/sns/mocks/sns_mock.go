// Code generated by MockGen. DO NOT EDIT.
// Source: sns_interface.go

// Package mock_sns is a generated GoMock package.
package mock_sns

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSNSInterface is a mock of SNSInterface interface.
type MockSNSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSNSInterfaceMockRecorder
	isgomock struct{}
}

// MockSNSInterfaceMockRecorder is the mock recorder for MockSNSInterface.
type MockSNSInterfaceMockRecorder struct {
	mock *MockSNSInterface
}

// NewMockSNSInterface creates a new mock instance.
func NewMockSNSInterface(ctrl *gomock.Controller) *MockSNSInterface {
	mock := &MockSNSInterface{ctrl: ctrl}
	mock.recorder = &MockSNSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSNSInterface) EXPECT() *MockSNSInterfaceMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockSNSInterface) Publish(ctx context.Context, message string, groupId string, dedupId string, filterKey string, filterValue string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", ctx, message, groupId, dedupId, filterKey, filterValue)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockSNSInterfaceMockRecorder) Publish(ctx, message, groupId, dedupId, filterKey, filterValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockSNSInterface)(nil).Publish), ctx, message, groupId, dedupId, filterKey, filterValue)
}
