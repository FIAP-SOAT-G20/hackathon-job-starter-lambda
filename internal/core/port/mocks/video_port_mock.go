// Code generated by MockGen. DO NOT EDIT.
// Source: video_port.go
//
// Generated by this command:
//
//	mockgen -source=video_port.go -destination=mocks/video_port_mock.go
//

// Package mock_port is a generated GoMock package.
package mock_port

import (
	context "context"
	reflect "reflect"

	dto "github.com/FIAP-SOAT-G20/hackathon-job-starter-lambda/internal/core/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockVideoUsecase is a mock of VideoUsecase interface.
type MockVideoUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockVideoUsecaseMockRecorder
	isgomock struct{}
}

// MockVideoUsecaseMockRecorder is the mock recorder for MockVideoUsecase.
type MockVideoUsecaseMockRecorder struct {
	mock *MockVideoUsecase
}

// NewMockVideoUsecase creates a new mock instance.
func NewMockVideoUsecase(ctrl *gomock.Controller) *MockVideoUsecase {
	mock := &MockVideoUsecase{ctrl: ctrl}
	mock.recorder = &MockVideoUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoUsecase) EXPECT() *MockVideoUsecaseMockRecorder {
	return m.recorder
}

// UpdateVideoStatus mocks base method.
func (m *MockVideoUsecase) UpdateVideoStatus(ctx context.Context, input dto.UpdateVideoStatusInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVideoStatus", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVideoStatus indicates an expected call of UpdateVideoStatus.
func (mr *MockVideoUsecaseMockRecorder) UpdateVideoStatus(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVideoStatus", reflect.TypeOf((*MockVideoUsecase)(nil).UpdateVideoStatus), ctx, input)
}

// MockVideoGateway is a mock of VideoGateway interface.
type MockVideoGateway struct {
	ctrl     *gomock.Controller
	recorder *MockVideoGatewayMockRecorder
	isgomock struct{}
}

// MockVideoGatewayMockRecorder is the mock recorder for MockVideoGateway.
type MockVideoGatewayMockRecorder struct {
	mock *MockVideoGateway
}

// NewMockVideoGateway creates a new mock instance.
func NewMockVideoGateway(ctrl *gomock.Controller) *MockVideoGateway {
	mock := &MockVideoGateway{ctrl: ctrl}
	mock.recorder = &MockVideoGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoGateway) EXPECT() *MockVideoGatewayMockRecorder {
	return m.recorder
}

// UpdateVideoStatus mocks base method.
func (m *MockVideoGateway) UpdateVideoStatus(ctx context.Context, input dto.UpdateVideoStatusInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVideoStatus", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVideoStatus indicates an expected call of UpdateVideoStatus.
func (mr *MockVideoGatewayMockRecorder) UpdateVideoStatus(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVideoStatus", reflect.TypeOf((*MockVideoGateway)(nil).UpdateVideoStatus), ctx, input)
}

// MockVideoController is a mock of VideoController interface.
type MockVideoController struct {
	ctrl     *gomock.Controller
	recorder *MockVideoControllerMockRecorder
	isgomock struct{}
}

// MockVideoControllerMockRecorder is the mock recorder for MockVideoController.
type MockVideoControllerMockRecorder struct {
	mock *MockVideoController
}

// NewMockVideoController creates a new mock instance.
func NewMockVideoController(ctrl *gomock.Controller) *MockVideoController {
	mock := &MockVideoController{ctrl: ctrl}
	mock.recorder = &MockVideoControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoController) EXPECT() *MockVideoControllerMockRecorder {
	return m.recorder
}

// UpdateVideoStatus mocks base method.
func (m *MockVideoController) UpdateVideoStatus(ctx context.Context, input dto.UpdateVideoStatusInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVideoStatus", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVideoStatus indicates an expected call of UpdateVideoStatus.
func (mr *MockVideoControllerMockRecorder) UpdateVideoStatus(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVideoStatus", reflect.TypeOf((*MockVideoController)(nil).UpdateVideoStatus), ctx, input)
}
